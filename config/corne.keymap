/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3
#define U_MOUSE_SCROLL_MAX 100                    /* <--- New max speed setting (default: 10) */

#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mwh {
  time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
};
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    /*
    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&kp ESCAPE>;
            key-positions = <2 1>;
        };

        b {
            bindings = <&kp CLCK>;
            key-positions = <14 13>;
        };

        c {
            bindings = <&kp TAB>;
            key-positions = <26 25>;
        };

        d {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        e {
            bindings = <&kp ENTER>;
            key-positions = <22 21>;
        };

        f {
            bindings = <&kp MINUS>;
            key-positions = <19 20>;
        };

        g {
            bindings = <&kp EQUAL>;
            key-positions = <21 20>;
        };

        h {
            bindings = <&sys_reset>;
            key-positions = <1 29>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <30 10>;
        };
    };
*/

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "0";
            bindings = <
&kp ESC       &kp Q           &kp W           &kp E               &kp R         &kp T        &kp Y        &kp U            &kp I                &kp O            &kp P          &kp BSPC
&kp CAPSLOCK  &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LEFT_CONTROL D  &hm LSHIFT F  &kp G        &kp H        &hm LSHFT J      &hm RIGHT_CONTROL K  &hm RIGHT_ALT L  &hm RGUI SEMI  &kp RET
&kp TAB       &kp Z           &kp X           &kp C               &kp V         &kp B        &kp N        &kp M            &kp COMMA            &kp DOT          &kp FSLH       &kp RSHFT
                                              &lt 1 ESCAPE        &lt 2 SPACE   &lt 3 TAB    &lt 4 ENTER  &lt 5 BACKSPACE  &lt 6 DELETE
            >;
        };

        number_layer {
            label = "1";
            bindings = <
&none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6          &kp N7          &kp N8        &kp N9           &kp N0  &none
&none  &none   &none   &none   &none   &none     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none   &none
&none  &none   &none   &none   &none   &none     &none           &msc MOVE_DOWN  &msc MOVE_UP  &none            &none   &none
                       &none   &none   &none     &mkp LCLK       &mkp RCLK       &none
            >;
        };

        bt_layer {
            label = "2";
            bindings = <
&kp ESC  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(PERIOD)  &kp PLUS     &kp LS(KP_MULTIPLY)   &kp LS(DOLLAR)  &kp COLON       &kp PIPE          &kp LS(GRAVE)  &none
&none    &kp NUMBER_4      &kp NUMBER_5      &kp NUMBER_6      &kp NUMBER_0    &kp MINUS    &kp KP_DIVIDE         &kp HASH        &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp SQT        &none
&none    &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp BACKSPACE   &kp EQUAL    &kp NON_US_BACKSLASH  &kp AMPERSAND   &kp LESS_THAN   &kp GREATER_THAN  &kp SLASH      &none
                                             &none             &none           &none        &none                 &none           &none
            >;
        };

        arrow_layer {
            label = "3";
            bindings = <
&none  &none           &kp UP_ARROW    &none      &none  &none    &none  &kt NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none                    &none
&none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &none  &none    &none  &kt NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kt NUMBER_0             &none
&none  &none           &none           &none      &none  &none    &none  &kt NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &mt BACKSPACE BACKSPACE  &none
                                       &none      &none  &none    &none  &none         &none
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &ext_power EP_TOG    &trans        &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &bt BT_PRV    &bt BT_NXT    &none         &bootloader          &trans        &trans  &trans  &trans  &trans  &trans
&none   &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0         &out OUT_TOG  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans               &trans        &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &kp TILDE         &kp PERCENT        &kp UNDERSCORE        &kp CARET              &kp PLUS     &trans  &trans          &kp UP_ARROW    &trans           &trans  &trans
&trans  &kp AT_SIGN       &kp SQT            &kp EXCLAMATION       &kp QUESTION           &kp MINUS    &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL    &trans  &trans          &trans          &trans           &trans  &trans
                                             &trans                &trans                 &trans       &trans  &trans          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12    &kp K_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans  &trans
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8     &trans             &trans           &trans  &trans  &trans  &trans
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4     &trans             &trans           &trans  &trans  &trans  &trans
                        &trans   &trans   &trans     &trans             &trans           &trans
            >;
        };
    };
};
